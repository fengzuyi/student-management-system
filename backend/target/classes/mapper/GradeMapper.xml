<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.management.mapper.GradeMapper">
    
    <resultMap id="gradeResultMap" type="com.student.management.dto.GradeDTO">
        <id property="id" column="id"/>
        <result property="studentId" column="student_id"/>
        <result property="studentName" column="student_name"/>
        <result property="studentNo" column="student_no"/>
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <result property="courseCode" column="course_code"/>
        <result property="score" column="score"/>
        <result property="semester" column="semester"/>
    </resultMap>

    <select id="findByStudentId" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        WHERE g.student_id = #{studentId}
    </select>

    <select id="findByCourseId" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        WHERE g.course_id = #{courseId}
    </select>

    <select id="findByStudentIdAndSemester" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        WHERE g.student_id = #{studentId} AND g.semester = #{semester}
    </select>

    <select id="findByStudentIdAndCourseIdAndSemester" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        WHERE g.student_id = #{studentId} 
        AND g.course_id = #{courseId}
        AND g.semester = #{semester}
    </select>

    <select id="selectById" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        WHERE g.id = #{id}
    </select>

    <insert id="insert" parameterType="com.student.management.entity.Grade" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO grade (student_id, course_id, score, semester)
        VALUES (#{studentId}, #{courseId}, #{score}, #{semester})
    </insert>

    <update id="update" parameterType="com.student.management.entity.Grade">
        UPDATE grade
        SET student_id = #{studentId},
            course_id = #{courseId},
            score = #{score},
            semester = #{semester}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM grade WHERE id = #{id}
    </delete>

    <select id="getAverageScoreByCourseAndSemester" resultType="java.lang.Double">
        SELECT AVG(score)
        FROM grade
        WHERE course_id = #{courseId} AND semester = #{semester}
    </select>

    <select id="getMaxScoreByCourseAndSemester" resultType="java.lang.Double">
        SELECT MAX(score)
        FROM grade
        WHERE course_id = #{courseId} AND semester = #{semester}
    </select>

    <select id="getMinScoreByCourseAndSemester" resultType="java.lang.Double">
        SELECT MIN(score)
        FROM grade
        WHERE course_id = #{courseId} AND semester = #{semester}
    </select>

    <delete id="deleteByStudentIds">
        DELETE FROM grade WHERE student_id IN
        <foreach collection="studentIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="countTotal" resultType="int">
        SELECT COUNT(*)
        FROM grade
    </select>

    <select id="findAll" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        ORDER BY g.id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <delete id="batchDelete">
        DELETE FROM grade WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="findStudentIdByStudentNo" resultType="java.lang.Long">
        SELECT id FROM student WHERE student_no = #{studentNo}
    </select>

    <select id="findCourseIdByCourseCode" resultType="java.lang.Long">
        SELECT id FROM course WHERE course_code = #{courseCode}
    </select>

    <select id="findAllWithoutPagination" resultType="com.student.management.dto.GradeDTO">
        SELECT 
            g.id,
            g.student_id as studentId,
            s.name as studentName,
            s.student_no as studentNo,
            g.course_id as courseId,
            c.course_name as courseName,
            c.course_code as courseCode,
            g.semester,
            g.score
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        ORDER BY g.id DESC
    </select>

    <select id="findAllSemesters" resultType="java.lang.String">
        SELECT DISTINCT semester
        FROM grade
        ORDER BY semester DESC
    </select>

    <select id="findAllWithFilters" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        <where>
            <if test="semester != null and semester != ''">
                AND g.semester = #{semester}
            </if>
            <if test="courseId != null">
                AND g.course_id = #{courseId}
            </if>
        </where>
        ORDER BY g.id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countTotalWithFilters" resultType="int">
        SELECT COUNT(*)
        FROM grade g
        <where>
            <if test="semester != null and semester != ''">
                AND g.semester = #{semester}
            </if>
            <if test="courseId != null">
                AND g.course_id = #{courseId}
            </if>
        </where>
    </select>

    <select id="findBatchForExport" resultMap="gradeResultMap">
        SELECT g.*, s.name as student_name, s.student_no, c.course_name, c.course_code
        FROM grade g
        LEFT JOIN student s ON g.student_id = s.id
        LEFT JOIN course c ON g.course_id = c.id
        <where>
            <if test="semester != null and semester != ''">
                AND g.semester = #{semester}
            </if>
            <if test="courseId != null">
                AND g.course_id = #{courseId}
            </if>
        </where>
        ORDER BY g.id DESC
        LIMIT #{offset}, #{limit}
    </select>
</mapper> 