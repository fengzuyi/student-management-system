<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.management.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="com.student.management.entity.Student">
        <id column="id" property="id"/>
        <result column="student_no" property="studentNo"/>
        <result column="name" property="name"/>
        <result column="class_id" property="classId"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="email" property="email"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <association property="classInfo" javaType="com.student.management.entity.Class">
            <id column="class_id" property="id"/>
            <result column="class_name" property="className"/>
            <result column="grade" property="grade"/>
            <result column="major" property="major"/>
            <result column="student_count" property="studentCount"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        s.id, s.student_no, s.name, s.class_id, c.class_name, s.gender, s.phone, s.email,
        s.create_time, s.update_time
    </sql>

    <select id="getList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student s
        LEFT JOIN class c ON s.class_id = c.id
        <where>
            <if test="studentNo != null and studentNo != ''">
                AND s.student_no LIKE CONCAT('%', #{studentNo}, '%')
            </if>
            <if test="name != null and name != ''">
                AND s.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="classId != null">
                AND s.class_id = #{classId}
            </if>
        </where>
        ORDER BY s.id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getCount" resultType="int">
        SELECT COUNT(*)
        FROM student s
        <where>
            <if test="studentNo != null and studentNo != ''">
                AND s.student_no LIKE CONCAT('%', #{studentNo}, '%')
            </if>
            <if test="name != null and name != ''">
                AND s.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="classId != null">
                AND s.class_id = #{classId}
            </if>
        </where>
    </select>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student s
        LEFT JOIN class c ON s.class_id = c.id
        WHERE s.id = #{id}
    </select>

    <select id="selectByStudentNo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student s
        LEFT JOIN class c ON s.class_id = c.id
        WHERE s.student_no = #{studentNo}
    </select>

    <insert id="insert" parameterType="com.student.management.entity.Student" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO student (
            student_no, name, class_id, gender, phone, email
        ) VALUES (
            #{studentNo}, #{name}, #{classId}, #{gender}, #{phone}, #{email}
        )
    </insert>

    <update id="update" parameterType="com.student.management.entity.Student">
        UPDATE student
        <set>
            <if test="studentNo != null">student_no = #{studentNo},</if>
            <if test="name != null">name = #{name},</if>
            <if test="classId != null">class_id = #{classId},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM student WHERE id = #{id}
    </delete>

    <delete id="batchDelete">
        DELETE FROM student WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectByClassId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student s
        LEFT JOIN class c ON s.class_id = c.id
        WHERE s.class_id = #{classId}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM student s
        LEFT JOIN class c ON s.class_id = c.id
        ORDER BY s.id DESC
    </select>
</mapper> 